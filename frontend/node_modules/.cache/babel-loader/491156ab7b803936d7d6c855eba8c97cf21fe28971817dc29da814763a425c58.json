{"ast":null,"code":"import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\nconst URL = \"http://localhost:4000/graphql?\";\nexport const client = new ApolloClient({\n  uri: URL,\n  cache: new InMemoryCache()\n});\n\n/** QUERIES  */\n\nexport const GET_INTERACTIONS = gql`\n    query {\n        interactions {\n            id\n            title\n            customer {\n                name\n                email\n            }\n        }\n    }\n`;\nexport const GET_AGENTS = gql`\n    query {\n        agents {\n            id\n            name\n            email\n        }\n    }\n`;\nexport const GET_A_INTERACTION = gql`\n    query ($id: ID!) {\n        interaction(id: $id) {\n            id\n            customer {\n                name\n            }\n            messages {\n                id\n                content\n                agent {\n                    name\n                }\n            }\n            notes {\n                id\n                content\n                agent {\n                    name\n                }\n            }\n        }\n    }\n`;\nexport const ADD_CUSTOMER_RESPONSE = gql`\n    mutation ($interactionId: ID!, $content: String!, $agentId: ID!) {\n        createMessage(\n            interactionId: $interactionId\n            content: $content\n            agentId: $agentId\n        ) {\n            id\n            content\n            agent {\n                id\n                name\n            }\n        }\n    }\n`;\nexport const ADD_NOTE = gql`\n    mutation ($interactionId: ID!, $content: String!, $agentId: ID!) {\n        createNote(\n            interactionId: $interactionId\n            content: $content\n            agentId: $agentId\n        ) {\n            id\n            content\n            agent {\n                id\n                name\n            }\n        }\n    }\n`;","map":{"version":3,"names":["ApolloClient","InMemoryCache","gql","URL","client","uri","cache","GET_INTERACTIONS","GET_AGENTS","GET_A_INTERACTION","ADD_CUSTOMER_RESPONSE","ADD_NOTE"],"sources":["/Users/siggy/Allcode/tests/ol-acc-msg/frontend/src/client/index.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\n\nconst URL = \"http://localhost:4000/graphql?\";\n\nexport const client = new ApolloClient({\n    uri: URL,\n    cache: new InMemoryCache(),\n});\n\n/** QUERIES  */\n\nexport const GET_INTERACTIONS = gql`\n    query {\n        interactions {\n            id\n            title\n            customer {\n                name\n                email\n            }\n        }\n    }\n`;\n\nexport const GET_AGENTS = gql`\n    query {\n        agents {\n            id\n            name\n            email\n        }\n    }\n`;\n\nexport const GET_A_INTERACTION = gql`\n    query ($id: ID!) {\n        interaction(id: $id) {\n            id\n            customer {\n                name\n            }\n            messages {\n                id\n                content\n                agent {\n                    name\n                }\n            }\n            notes {\n                id\n                content\n                agent {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_CUSTOMER_RESPONSE = gql`\n    mutation ($interactionId: ID!, $content: String!, $agentId: ID!) {\n        createMessage(\n            interactionId: $interactionId\n            content: $content\n            agentId: $agentId\n        ) {\n            id\n            content\n            agent {\n                id\n                name\n            }\n        }\n    }\n`;\n\nexport const ADD_NOTE = gql`\n    mutation ($interactionId: ID!, $content: String!, $agentId: ID!) {\n        createNote(\n            interactionId: $interactionId\n            content: $content\n            agentId: $agentId\n        ) {\n            id\n            content\n            agent {\n                id\n                name\n            }\n        }\n    }\n`;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,GAAG,QAAQ,gBAAgB;AAEjE,MAAMC,GAAG,GAAG,gCAAgC;AAE5C,OAAO,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EACnCK,GAAG,EAAEF,GAAG;EACRG,KAAK,EAAE,IAAIL,aAAa;AAC5B,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMM,gBAAgB,GAAGL,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMM,UAAU,GAAGN,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMO,iBAAiB,GAAGP,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMQ,qBAAqB,GAAGR,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMS,QAAQ,GAAGT,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}