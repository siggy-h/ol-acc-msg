{"ast":null,"code":"var _jsxFileName = \"/Users/siggy/Allcode/tests/ol-acc-msg/frontend/src/components/InteractionContent/Messages.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\nimport { AppContext } from \"../../context\";\nimport { ADD_CUSTOMER_RESPONSE, GET_A_INTERACTION } from \"../../client\";\nimport Heading from \"../Heading\";\nimport { Form } from \"./Form\";\nimport MessageCard from \"./MessageCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = _ref => {\n  _s();\n  let {\n    messages\n  } = _ref;\n  const {\n    selectedId,\n    agent\n  } = React.useContext(AppContext);\n  const [addMessage, {\n    loading\n  }] = useMutation(ADD_CUSTOMER_RESPONSE, {\n    update(cache, _ref2) {\n      let {\n        data: {\n          createMessage\n        }\n      } = _ref2;\n      const result = cache.readQuery({\n        query: GET_A_INTERACTION,\n        variables: {\n          id: selectedId\n        }\n      });\n      if (result) {\n        cache.writeQuery({\n          query: GET_A_INTERACTION,\n          data: {\n            interaction: {\n              ...result.interaction,\n              messages: [...result.interaction.messages, {\n                ...createMessage,\n                agent: {\n                  agent\n                }\n              }]\n            }\n          }\n        });\n      }\n    },\n    onCompleted() {\n      toast(\"Success: Added customer reply\", {\n        type: \"success\"\n      });\n    },\n    onError() {\n      toast(\"Error: Failed to add customer reply\", {\n        type: \"error\"\n      });\n    }\n  });\n  const handleAddMessage = content => {\n    addMessage({\n      variables: {\n        interactionId: selectedId,\n        content,\n        agentId: agent === null || agent === void 0 ? void 0 : agent.id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col grow mr-4 w-2/3\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      id: \"message-heading\",\n      type: \"h2\",\n      defaultStyle: \"pb-2\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"flex flex-col grow overflow-auto mb-4 h-2/3\"\n      /** Adding tabIndex & a label to non-interactive element because it\n       * could be scrollable with a long list. */\n      // eslint-disable-next-line\n      ,\n      tabIndex: 0,\n      \"aria-labelledby\": \"message-heading\",\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(MessageCard, {\n        message: m\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grow-0\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleAddMessage,\n        title: \"Reply to customer\",\n        cta: \"Reply to customer\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"FAyyyhjvoqpfLJ7BVaxLZtKOQKs=\", false, function () {\n  return [useMutation];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useMutation","toast","AppContext","ADD_CUSTOMER_RESPONSE","GET_A_INTERACTION","Heading","Form","MessageCard","Messages","messages","selectedId","agent","useContext","addMessage","loading","update","cache","data","createMessage","result","readQuery","query","variables","id","writeQuery","interaction","onCompleted","type","onError","handleAddMessage","content","interactionId","agentId","map","m"],"sources":["/Users/siggy/Allcode/tests/ol-acc-msg/frontend/src/components/InteractionContent/Messages.tsx"],"sourcesContent":["import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\n\nimport { AppContext } from \"../../context\";\nimport { ADD_CUSTOMER_RESPONSE, GET_A_INTERACTION } from \"../../client\";\nimport { AnInteractionResponse } from \"../../client/types\";\n\nimport Heading from \"../Heading\";\nimport { Form } from \"./Form\";\nimport MessageCard from \"./MessageCard\";\nimport { Message } from \"../../types\";\n\ninterface Props {\n    messages: Message[];\n}\n\nconst Messages = ({ messages }: Props) => {\n    const { selectedId, agent } = React.useContext(AppContext);\n\n    const [addMessage, { loading }] = useMutation(ADD_CUSTOMER_RESPONSE, {\n        update(cache, { data: { createMessage } }) {\n            const result = cache.readQuery<AnInteractionResponse>({\n                query: GET_A_INTERACTION,\n                variables: { id: selectedId },\n            });\n            if (result) {\n                cache.writeQuery({\n                    query: GET_A_INTERACTION,\n                    data: {\n                        interaction: {\n                            ...result.interaction,\n                            messages: [\n                                ...result.interaction.messages,\n                                { ...createMessage, agent: { agent } },\n                            ],\n                        },\n                    },\n                });\n            }\n        },\n        onCompleted() {\n            toast(\"Success: Added customer reply\", { type: \"success\" });\n        },\n        onError() {\n            toast(\"Error: Failed to add customer reply\", { type: \"error\" });\n        },\n    });\n\n    const handleAddMessage = (content: string) => {\n        addMessage({\n            variables: {\n                interactionId: selectedId,\n                content,\n                agentId: agent?.id,\n            },\n        });\n    };\n\n    return (\n        <div className=\"flex flex-col grow mr-4 w-2/3\">\n            <Heading id=\"message-heading\" type=\"h2\" defaultStyle=\"pb-2\">\n                Messages\n            </Heading>\n\n            <ul\n                className=\"flex flex-col grow overflow-auto mb-4 h-2/3\"\n                /** Adding tabIndex & a label to non-interactive element because it\n                 * could be scrollable with a long list. */\n                // eslint-disable-next-line\n                tabIndex={0}\n                aria-labelledby=\"message-heading\"\n            >\n                {messages.map((m) => (\n                    <MessageCard key={m.id} message={m} />\n                ))}\n            </ul>\n            <div className=\"grow-0\">\n                <Form\n                    onSubmit={handleAddMessage}\n                    title=\"Reply to customer\"\n                    cta=\"Reply to customer\"\n                    loading={loading}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Messages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}